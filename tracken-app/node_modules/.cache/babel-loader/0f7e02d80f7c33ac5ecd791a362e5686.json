{"ast":null,"code":"import _objectSpread from \"/home/vlad/Desktop/repos/jfdd11-nan-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/vlad/Desktop/repos/jfdd11-nan-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport firebase from \"firebase\";\nexport var getPackagesPromise = function getPackagesPromise() {\n  return firebase.database().ref(\"packages\").once(\"value\").then(function (snapshot) {\n    return snapshot.val();\n  }).then(function (data) {\n    return Object.entries(data || {}).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          id = _ref2[0],\n          value = _ref2[1];\n\n      return _objectSpread({\n        id: id\n      }, value);\n    });\n  });\n};\nexport var updatePackagePromise = function updatePackagePromise(client_id, status) {\n  return firebase.database().ref(\"packages\").child(client_id).update({\n    status: status\n  });\n};","map":{"version":3,"sources":["/home/vlad/Desktop/repos/jfdd11-nan-app/src/services/index.js"],"names":["firebase","getPackagesPromise","database","ref","once","then","snapshot","val","data","Object","entries","map","id","value","updatePackagePromise","client_id","status","child","update"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAChCD,QAAQ,CACLE,QADH,GAEGC,GAFH,CAEO,UAFP,EAGGC,IAHH,CAGQ,OAHR,EAIGC,IAJH,CAIQ,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,GAAT,EAAJ;AAAA,GAJhB,EAKGF,IALH,CAKQ,UAAAG,IAAI;AAAA,WACRC,MAAM,CAACC,OAAP,CAAeF,IAAI,IAAI,EAAvB,EAA2BG,GAA3B,CAA+B;AAAA;AAAA,UAAEC,EAAF;AAAA,UAAMC,KAAN;;AAAA;AAC7BD,QAAAA,EAAE,EAAFA;AAD6B,SAE1BC,KAF0B;AAAA,KAA/B,CADQ;AAAA,GALZ,CADgC;AAAA,CAA3B;AAaP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,SAAD,EAAYC,MAAZ;AAAA,SAClChB,QAAQ,CACLE,QADH,GAEGC,GAFH,CAEO,UAFP,EAGGc,KAHH,CAGSF,SAHT,EAIGG,MAJH,CAIU;AACNF,IAAAA,MAAM,EAANA;AADM,GAJV,CADkC;AAAA,CAA7B","sourcesContent":["import firebase from \"firebase\";\n\nexport const getPackagesPromise = () =>\n  firebase\n    .database()\n    .ref(\"packages\")\n    .once(\"value\")\n    .then(snapshot => snapshot.val())\n    .then(data =>\n      Object.entries(data || {}).map(([id, value]) => ({\n        id,\n        ...value\n      }))\n    )\n\nexport const updatePackagePromise = (client_id, status) =>\n  firebase\n    .database()\n    .ref(\"packages\")\n    .child(client_id)\n    .update({\n      status\n    });\n"]},"metadata":{},"sourceType":"module"}