{"ast":null,"code":"import _objectSpread from \"/home/vlad/Desktop/repos/jfdd11-nan-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/vlad/Desktop/repos/jfdd11-nan-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vlad/Desktop/repos/jfdd11-nan-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vlad/Desktop/repos/jfdd11-nan-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vlad/Desktop/repos/jfdd11-nan-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vlad/Desktop/repos/jfdd11-nan-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vlad/Desktop/repos/jfdd11-nan-app/src/components/Dashboard/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport MainMenu from \"../MainMenu\";\nimport firebase from 'firebase';\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { Select, Button } from \"semantic-ui-react\";\nimport \"./Dashboard.css\";\nimport { getPackagesPromise } from \"../../services\";\nimport SendParcel from \"../SendParcel/SendParcel\";\nimport Auth from \"../Auth/Auth\";\nimport { withAuth } from \"../../contexts/AuthContext\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      packages: [],\n      searchPhrase: \"\",\n      pagination: 0,\n      option: \"all\",\n      showSendParcel: false,\n      user: {\n        name: \"\",\n        surname: \"\",\n        uid: \"\",\n        email: \"\"\n      },\n      admin: '8Bs4aOt02UM4pih740Ql0dviPJC3'\n    };\n\n    _this.syncPackages = function () {\n      return getPackagesPromise().then(function (packages) {\n        return _this.setState({\n          packages: packages\n        });\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        searchPhrase: event.target.value\n      });\n    };\n\n    _this.handlePaginationChange = function (event) {\n      var paginationPage = event.target.value;\n\n      _this.setState({\n        pagination: paginationPage * 10\n      });\n    };\n\n    _this.handleOptionChange = function (event, data) {\n      _this.setState({\n        option: data.value\n      });\n    };\n\n    _this.toggleShowSendParcel = function () {\n      _this.setState({\n        showSendParcel: !_this.state.showSendParcel\n      });\n    };\n\n    _this.handleChangeStatus = function (event) {\n      var packageId = event.target.attributes.dataid.value;\n      var packageName = event.target.name;\n      console.log(event.target);\n      console.log(packageId);\n      console.log(packageName);\n      firebase.database().ref(\"packages\").child(packageId).child('status').set(packageName);\n\n      _this.syncPackages();\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.syncPackages();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$authConte = this.props.authContext,\n          user = _this$props$authConte.user,\n          userData = _this$props$authConte.userData;\n      var _this$state = this.state,\n          packages = _this$state.packages,\n          pagination = _this$state.pagination,\n          option = _this$state.option,\n          searchPhrase = _this$state.searchPhrase,\n          showSendParcel = _this$state.showSendParcel,\n          admin = _this$state.admin;\n      var filteredPackages = packages.slice().filter(function (pack) {\n        return user.uid === admin ? true : pack.client_id === user.uid;\n      }).sort(function (a, b) {\n        return moment(a.date_send).isAfter(b.date_send) ? -1 : 1;\n      }).map(function (pack) {\n        return _objectSpread({}, pack, {\n          searchData: (pack.delivery.name + pack.delivery.city + pack.delivery.street).toLowerCase()\n        });\n      }).filter(function (pack) {\n        return pack.searchData.includes(searchPhrase.toLowerCase());\n      }).filter(function (pack) {\n        return option === \"all\" ? true : pack.status === option;\n      });\n      return React.createElement(\"div\", {\n        className: \"Dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: \"100%\",\n          background: \"#eee\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(MainMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(Auth, {\n        cover: function cover() {\n          return React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, \"Dashboard is available for logged in users only.\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Dashboard\"), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, user ? \"Witaj, \".concat(userData.name, \" \").concat(userData.surname) : \"\"), React.createElement(\"div\", {\n        className: \"dashboard-interface\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Search...\",\n        value: searchPhrase,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(Select, {\n        placeholder: \"Select status\",\n        options: [{\n          key: 1,\n          value: \"all\",\n          text: \"All\"\n        }, {\n          key: 2,\n          value: \"received\",\n          text: \"Received\"\n        }, {\n          key: 3,\n          value: \"send\",\n          text: \"Send\"\n        }, {\n          key: 4,\n          value: \"pending\",\n          text: \"Pending\"\n        }],\n        onChange: this.handleOptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.toggleShowSendParcel(showSendParcel);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, showSendParcel ? \"Cancel\" : \"Send new parcel\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), showSendParcel && React.createElement(SendParcel, {\n        clientID: user.uid,\n        closeSendParcel: function closeSendParcel() {\n          return _this2.toggleShowSendParcel(showSendParcel);\n        },\n        refreshView: function refreshView() {\n          return _this2.syncPackages();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        className: \"ui celled table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Date order\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Date send\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Delivery Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Delivery address\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Details\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, filteredPackages.map(function (pack) {\n        return React.createElement(\"tr\", {\n          key: pack.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"span__title--td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, \"Date order:\\xA0\\xA0 \"), pack.date_order), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"span__title--td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, \"Date send:\\xA0\\xA0 \"), pack.date_send), React.createElement(\"td\", {\n          style: {\n            color: pack.status === \"received\" ? \"#006622\" : pack.status === \"send\" ? \"#0099ff\" : \"#e68a00\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"span__title--td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, \"Status:\\xA0\\xA0 \"), pack.status), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"span__title--td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, \"Delivery name:\\xA0\\xA0 \"), pack.delivery.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"span__title--td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, \"Delivery address:\\xA0\\xA0 \"), React.createElement(\"span\", {\n          className: \"span__content--td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, pack.delivery.city, \" \", pack.delivery.postalcode, \",\", \" \", pack.delivery.street, \" \", pack.delivery.number)), React.createElement(\"td\", {\n          className: \"td_buttons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"span__title--td\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"Details:\\xA0\\xA0 \"), React.createElement(Link, {\n          to: \"/dashboard/\".concat(pack.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"ui button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, \"Details\")), user.uid === admin && React.createElement(React.Fragment, null, React.createElement(\"button\", {\n          className: \"ui button\",\n          dataid: pack.id,\n          name: \"send\",\n          onClick: _this2.handleChangeStatus,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, \"Send\"), React.createElement(\"button\", {\n          className: \"ui button\",\n          dataid: pack.id,\n          name: \"received\",\n          onClick: _this2.handleChangeStatus,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, \"Received\"))));\n      }).slice(pagination, pagination + 10))), React.createElement(\"div\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, Array.from({\n        length: Math.ceil(filteredPackages.length / 10)\n      }).map(function (button, index) {\n        return React.createElement(\"button\", {\n          className: \"ui button\",\n          key: index,\n          value: index,\n          onClick: _this2.handlePaginationChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, index + 1);\n      }))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default withAuth(Dashboard);","map":{"version":3,"sources":["/home/vlad/Desktop/repos/jfdd11-nan-app/src/components/Dashboard/Dashboard.js"],"names":["React","Component","MainMenu","firebase","Link","moment","Select","Button","getPackagesPromise","SendParcel","Auth","withAuth","Dashboard","state","packages","searchPhrase","pagination","option","showSendParcel","user","name","surname","uid","email","admin","syncPackages","then","setState","handleChange","event","target","value","handlePaginationChange","paginationPage","handleOptionChange","data","toggleShowSendParcel","handleChangeStatus","packageId","attributes","dataid","packageName","console","log","database","ref","child","set","props","authContext","userData","filteredPackages","slice","filter","pack","client_id","sort","a","b","date_send","isAfter","map","searchData","delivery","city","street","toLowerCase","includes","status","width","background","key","text","id","date_order","color","postalcode","number","Array","from","length","Math","ceil","button","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport MainMenu from \"../MainMenu\";\nimport firebase from 'firebase'\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\n\n\nimport { Select, Button } from \"semantic-ui-react\";\n\nimport \"./Dashboard.css\";\nimport { getPackagesPromise } from \"../../services\";\nimport SendParcel from \"../SendParcel/SendParcel\";\nimport Auth from \"../Auth/Auth\";\nimport { withAuth } from \"../../contexts/AuthContext\";\n\nclass Dashboard extends Component {\n  state = {\n    packages: [],\n    searchPhrase: \"\",\n    pagination: 0,\n    option: \"all\",\n    showSendParcel: false,\n    user: {\n      name: \"\",\n      surname: \"\",\n      uid: \"\",\n      email: \"\"\n    },\n    admin:'8Bs4aOt02UM4pih740Ql0dviPJC3'\n  };\n\n  syncPackages = () =>\n    getPackagesPromise().then(packages => this.setState({ packages }));\n\n  componentDidMount() {\n    this.syncPackages();\n  }\n\n  handleChange = event => {\n    this.setState({\n      searchPhrase: event.target.value\n    });\n  };\n  handlePaginationChange = event => {\n    const paginationPage = event.target.value;\n    this.setState({\n      pagination: paginationPage * 10\n    });\n  };\n  handleOptionChange = (event, data) => {\n    this.setState({\n      option: data.value\n    });\n  };\n\n  toggleShowSendParcel = () => {\n    this.setState({ showSendParcel: !this.state.showSendParcel });\n  };\n\n  handleChangeStatus = (event) => {\n    const packageId = event.target.attributes.dataid.value;\n    const packageName = event.target.name;\n    console.log(event.target)\n    console.log(packageId)\n    console.log(packageName)\n    firebase\n      .database()\n      .ref(\"packages\")\n      .child(packageId)\n      .child('status')\n      .set(packageName)\n\n      this.syncPackages()\n  }\n\n  render() {\n    const { user, userData } = this.props.authContext;\n    const {\n      packages,\n      pagination,\n      option,\n      searchPhrase,\n      showSendParcel,\n      admin\n    } = this.state;\n    const filteredPackages = packages\n      .slice()\n      .filter(pack =>  (user.uid === admin ? true : pack.client_id === user.uid))\n      .sort((a, b) => (moment(a.date_send).isAfter(b.date_send) ? -1 : 1))\n      .map(pack => ({\n        ...pack,\n        searchData: (\n          pack.delivery.name +\n          pack.delivery.city +\n          pack.delivery.street\n        ).toLowerCase()\n      }))\n      .filter(pack => pack.searchData.includes(searchPhrase.toLowerCase()))\n      .filter(pack => (option === \"all\" ? true : pack.status === option));\n    return (\n      <div className=\"Dashboard\">\n        <div style={{ width: \"100%\", background: \"#eee\" }}>\n          <MainMenu />\n        </div>\n        <Auth\n          cover={() => <p>Dashboard is available for logged in users only.</p>}\n        >\n          <h1>Dashboard</h1>\n          <h4>{user ? `Witaj, ${userData.name} ${userData.surname}` : \"\"}</h4>\n          <div className=\"dashboard-interface\">\n            <div className=\"ui input\">\n              <input\n                placeholder=\"Search...\"\n                value={searchPhrase}\n                onChange={this.handleChange}\n              />\n            </div>\n            <Select\n              placeholder=\"Select status\"\n              options={[\n                { key: 1, value: \"all\", text: \"All\" },\n                { key: 2, value: \"received\", text: \"Received\" },\n                { key: 3, value: \"send\", text: \"Send\" },\n                { key: 4, value: \"pending\", text: \"Pending\" }\n              ]}\n              onChange={this.handleOptionChange}\n            />\n            <div>\n              <Button onClick={() => this.toggleShowSendParcel(showSendParcel)}>\n                {showSendParcel ? \"Cancel\" : \"Send new parcel\"}\n              </Button>\n            </div>\n          </div>\n          <br />\n          <br />\n          {showSendParcel && (\n            <SendParcel\n              clientID={user.uid}\n              closeSendParcel={() => this.toggleShowSendParcel(showSendParcel)}\n              refreshView={() => this.syncPackages()}\n            />\n          )}\n\n          <table className=\"ui celled table\">\n            <thead>\n              <tr>\n                <th>Date order</th>\n                <th>Date send</th>\n                <th>Status</th>\n                <th>Delivery Name</th>\n                <th>Delivery address</th>\n                <th>Details</th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredPackages\n                .map(pack => (\n                  <tr key={pack.id}>\n                    <td><span className=\"span__title--td\">Date order:&nbsp;&nbsp; </span>{pack.date_order}</td>\n                    <td><span className=\"span__title--td\">Date send:&nbsp;&nbsp; </span>{pack.date_send}</td>\n                    <td\n                      style={{\n                        color:\n                          pack.status === \"received\"\n                            ? \"#006622\"\n                            : pack.status === \"send\"\n                            ? \"#0099ff\"\n                            : \"#e68a00\"\n                      }}\n                    >\n                      <span className=\"span__title--td\">Status:&nbsp;&nbsp; </span>{pack.status}\n                    </td>\n                    <td><span className=\"span__title--td\">Delivery name:&nbsp;&nbsp; </span>{pack.delivery.name}</td>\n                    <td><span className=\"span__title--td\">Delivery address:&nbsp;&nbsp; </span><span className=\"span__content--td\">\n                      {pack.delivery.city} {pack.delivery.postalcode},{\" \"}\n                      {pack.delivery.street} {pack.delivery.number}</span>\n                    </td>\n                    <td className=\"td_buttons\"><span className=\"span__title--td\">Details:&nbsp;&nbsp; </span>\n                      <Link to={`/dashboard/${pack.id}`}>\n                        <button className=\"ui button\">Details</button>\n                      </Link>\n                      {user.uid === admin && \n                      (<>\n                      <button className=\"ui button\" dataid={pack.id} name=\"send\" onClick={this.handleChangeStatus}>Send</button>\n                      <button className=\"ui button\" dataid={pack.id} name=\"received\" onClick={this.handleChangeStatus}>Received</button>\n                      </>)}\n                    </td>\n                  </tr>\n                ))\n                .slice(pagination, pagination + 10)}\n            </tbody>\n          </table>\n          <div className=\"pagination\">\n            {Array.from({\n              length: Math.ceil(filteredPackages.length / 10)\n            }).map((button, index) => (\n              <button\n                className=\"ui button\"\n                key={index}\n                value={index}\n                onClick={this.handlePaginationChange}\n              >\n                {index + 1}\n              </button>\n            ))}\n          </div>\n        </Auth>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Dashboard);\n"]},"metadata":{},"sourceType":"module"}