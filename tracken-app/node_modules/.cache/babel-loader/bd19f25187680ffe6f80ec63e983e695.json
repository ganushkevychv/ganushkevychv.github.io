{"ast":null,"code":"import _objectSpread from \"/home/vlad/Desktop/repos/jfdd11-nan-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/vlad/Desktop/repos/jfdd11-nan-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vlad/Desktop/repos/jfdd11-nan-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vlad/Desktop/repos/jfdd11-nan-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vlad/Desktop/repos/jfdd11-nan-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vlad/Desktop/repos/jfdd11-nan-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vlad/Desktop/repos/jfdd11-nan-app/src/components/Chat/Form.js\";\nimport React, { Component } from \"react\";\nimport \"./Form.css\";\nimport Message from \"../Chat/Message\";\nimport firebase from \"firebase\";\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userName: \"not registered\",\n      message: \"\",\n      list: []\n    };\n    _this.messageRef = firebase.database().ref('chats').child(_this.props.chatId).child(\"messages\");\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        message: event.target.value\n      });\n    };\n\n    _this.handleSend = function () {\n      if (_this.state.message) {\n        var newItem = {\n          authorId: _this.props.user.uid,\n          content: _this.state.message\n        };\n\n        _this.messageRef.push(newItem);\n\n        _this.setState({\n          message: \"\"\n        });\n      }\n    };\n\n    _this.handleKeyPress = function (event) {\n      if (event.key !== \"Enter\") return;\n\n      _this.handleSend();\n    };\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.messageRef.limitToLast(100).on(\"value\", function (message) {\n        _this2.setState({\n          list: Object.values(message.val() || {}).map(function (message) {\n            return _objectSpread({}, message, {\n              userName: _this2.props.users[message.authorId].name\n            });\n          })\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.messageRef.off('value');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form__message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \" \", this.state.list.map(function (item, index) {\n        return React.createElement(Message, {\n          key: index,\n          message: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        });\n      }), \" \"), \" \", React.createElement(\"div\", {\n        className: \"form__row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form__input\",\n        type: \"text\",\n        placeholder: \"Type message\",\n        value: this.state.message,\n        onChange: this.handleChange,\n        onKeyPress: this.handleKeyPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), \" \", React.createElement(\"button\", {\n        className: \"form__button\",\n        onClick: this.handleSend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"send\", \" \"), \" \"), \" \");\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":{"version":3,"sources":["/home/vlad/Desktop/repos/jfdd11-nan-app/src/components/Chat/Form.js"],"names":["React","Component","Message","firebase","Form","state","userName","message","list","messageRef","database","ref","child","props","chatId","handleChange","event","setState","target","value","handleSend","newItem","authorId","user","uid","content","push","handleKeyPress","key","limitToLast","on","Object","values","val","map","users","name","off","item","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Form.css\";\nimport Message from \"../Chat/Message\";\nimport firebase from \"firebase\";\nclass Form extends Component {\n  \n   state = {\n      userName: \"not registered\",\n      message: \"\",\n      list: []\n    };\n    messageRef = firebase\n      .database()\n      .ref('chats').child(this.props.chatId)\n      .child(\"messages\");\n    \n\n  \n  handleChange = (event) => {\n    this.setState({ message: event.target.value });\n  }\n  handleSend = () => {\n    if (this.state.message) {\n      let newItem = {\n        authorId: this.props.user.uid,\n        content: this.state.message\n      };\n      this.messageRef.push(newItem);\n      this.setState({ message: \"\" });\n    }\n  }\n  handleKeyPress = (event) => {\n    if (event.key !== \"Enter\") return;\n    this.handleSend();\n  }\n  componentDidMount() {\n    this.messageRef.limitToLast(100).on(\"value\", message => {\n      this.setState({\n        list: Object.values(message.val() || {}).map(message => ({ ...message, userName: this.props.users[message.authorId].name}))\n      });\n    });\n  }\n\n  componentWillUnmount(){\n    this.messageRef.off('value');\n  }\n\n  render() {\n    return (\n      <div className=\"form\">\n        <div className=\"form__message\">\n          {\" \"}\n          {this.state.list.map((item, index) => (\n            <Message key={index} message={item} />\n          ))}{\" \"}\n        </div>{\" \"}\n        <div className=\"form__row\">\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            placeholder=\"Type message\"\n            value={this.state.message}\n            onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress}\n          />{\" \"}\n          <button className=\"form__button\" onClick={this.handleSend}>\n            send{\" \"}\n          </button>{\" \"}\n        </div>{\" \"}\n      </div>\n    );\n  }\n}\nexport default Form;"]},"metadata":{},"sourceType":"module"}